# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Publish

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      NEXT_VERSION: "1.0.0"

    steps:
    - name: Setup Chrome
      # You may pin to the exact commit or the version.
      # uses: browser-actions/setup-chrome@4fa655aad48f56911cad16db9252399a9e592848
      uses: browser-actions/setup-chrome@v0.0.0
      with:
        # The Chromium version to install and use.
        chromium-version: # optional
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Get Next Version Number
      run: |
        next_ver=$(bash ./build/get_next_package_version.sh)
        echo "Next version is $next_ver"
        echo "NEXT_VERSION=$next_ver" >> $GITHUB_ENV        
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Start Test Server
      run: |
        cd TestServer
        dotnet ./bin/Release/net6.0/TestServer.dll &
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
    - name: Package
      run: dotnet pack --configuration Release -p:PackageVersion=$NEXT_VERSION
    - name: Publish
      run: dotnet nuget push ./PuppeteerSharp.Replay/bin/Release/PuppeteerSharp.Replay*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
    - name: Collect Artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: screenshots
        path: PuppeteerSharp.Replay.Tests/bin/Release/net6.0/screenshots/